on: [push, pull_request, workflow_dispatch]

name: CI

env:
  RUSTFLAGS: -D warnings
  RUSTDOCFLAGS: -D warnings

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features


  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: sudo apt-get install libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: windows-latest
          TARGET: x86_64-pc-windows-msvc
          EXTENSION: .exe

    steps:
    - name: Building ${{ matrix.TARGET }}
      run: echo "${{ matrix.TARGET }}"

    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1.0.1
      with:
        toolchain: stable
        target: ${{ matrix.TARGET }}
        override: true

    - uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --verbose --release --target=${{ matrix.TARGET }}

    - name: Rename
      run: cp target/${{ matrix.TARGET }}/release/ed-timelapse${{ matrix.EXTENSION }} ed-timelapse-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

    - uses: actions/upload-artifact@master
      with:
        name: ed-timelapse-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        path: ed-timelapse-${{ matrix.TARGET }}${{ matrix.EXTENSION }}

    - uses: svenstaro/upload-release-action@v2
      name: Upload binaries to release
      if: ${{ github.event_name == 'push' }}
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ed-timelapse-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        asset_name: ed-timelapse-${{ matrix.TARGET }}${{ matrix.EXTENSION }}
        tag: ${{ github.ref }}
        prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
        overwrite: true
